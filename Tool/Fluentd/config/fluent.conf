<source>
  @type tail
  path /log/api.log
  pos_file /log/api_log.pos
  pos_file_compaction_interval 72h
  multiline_flush_interval 3s

  tag app.api.log

  path_key filePath

  <parse>
    @type multiline
    format_firstline /^(\[\d{4}-)/
    format1 /(?<message>.*)/
  </parse>
</source>

<filter app.**>
  @type parser

  key_name message
  reserve_data true
  reserve_time true

  <parse>
      @type multiline_grok
      keep_time_key true

      <grok>
        pattern \[%{DATA:timestamp}\] \[%{LOGLEVEL:level}\] \[%{DATA:name}\] - %{IP:ip} - - \"%{WORD:method} %{URIPATHPARAM:request_url} %{WORD:protocol}\/%{BASE16FLOAT:http_version}\" %{NUMBER:status_code} %{DATA:size} \"%{DATA:http_referrer}\" \"%{DATA:user_agent}\" -body- %{DATA:post_body} -params- %{DATA:url_params} -cookie- %{DATA:cookie} logname: %{GREEDYDATA:logname}
      </grok>

      <grok>
        pattern \[%{DATA:timestamp}\] \[%{LOGLEVEL:level}\] \[%{DATA:name}\] - %{GREEDYDATA:body} logname: %{GREEDYDATA:logname}
      </grok>

      <grok>
        pattern \[%{DATA:timestamp}\] \[%{LOGLEVEL:level}\] \[%{DATA:name}\] - %{GREEDYDATA:body}
      </grok>
  </parse>
</filter>

<filter app.**>
  @type record_transformer
  enable_ruby
  <record>
    timestamp ${record["timestamp"] ? (record["timestamp"].gsub(" ", "T").concat("+0800")) : ("")}
    tag ${tag}
    tag2 ${tag_parts[0]}
    fileName ${record["filePath"].scan(/\/([\w-]+)\.log/).last} 
  </record>
</filter>

# <filter app.**>
#   @type parser
#   key_name filePath
#   <parse>
#     @type regexp
#     expression /.*?\/(?<fileName>.*)\.log$/
#   </parse>
# </filter>


# <match **>
#   @type stdout
# </match>


# <match **>
#   @type mongo
#   host 192.168.40.154
#   port 27017
#   database fluentd
#   collection test

#   # for capped collection
#   capped
#   capped_size 1024m

#   # authentication
#   # user michael
#   # password jordan

#   <inject>
#     # key name of timestamp
#     time_key time
#   </inject>

#   <buffer>
#     # flush
#     flush_interval 10s
#   </buffer>
# </match>


<match app.**>
  @type copy
  
  <store>
    @type stdout
  </store>

  <store>
    @type mongo
    host 192.168.40.154
    port 27017
    database fluentd
    collection test

    # for capped collection
    capped
    capped_size 1024m

    date_keys timestamp

    # authentication
    # user michael
    # password jordan

    <buffer>
      # flush
      flush_interval 3s
    </buffer>
  </store>
</match>